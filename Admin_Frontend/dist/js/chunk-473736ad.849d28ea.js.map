{"version":3,"sources":["webpack:///./src/router/views/chat/index.vue","webpack:///./src/router/views/chat/data.js","webpack:///./src/router/views/chat/index.vue?027c","webpack:///./src/assets/images/users/avatar-2.jpg","webpack:///./node_modules/@vuelidate/validators/dist/index.esm.js"],"names":["class","src","alt","type","placeholder","href","aria-label","placement","title","items","menu-class","right","variant","button-content","pills","fill","content-class","active","style","id","chatData","data","username","name","key","chatUsername","color","image","charAt","message","time","toggle-class","ref","chatMessagesData","align","formSubmit","form","submitted","v$","$error","required","$message","require","setup","page","meta","content","description","components","Layout","PageHeader","SimpleBar","text","validations","withMessage","methods","this","usermessage","currentDate","Date","push","getHours","getMinutes","e","$touch","$invalid","handleScroll","$refs","current","$el","setTimeout","value","getScrollElement","scrollTop","scrollHeight","mounted","container1","document","querySelector","scrollTo","top","behavior","container2","__exports__","render","module","exports","isFunction","val","isObject","o","Array","isArray","normalizeValidatorObject","validator","$validator","Object","assign","unwrapValidatorResponse","result","$valid","unwrapNormalizedValidator","withParams","$params","Error","validatorObj","withAsync","$watchTargets","$async","forEach","validators","collection","others","reduce","previous","collectionItem","collectionEntryResult","entries","all","property","$model","innerValidators","propertyResult","validatorName","currentValidator","validatorFunction","$response","call","$data","$pending","$errors","$property","concat","map","context","values","errors","error","a","b","req","length","undefined","isNaN","getTime","_","String","len","keys","regex","expr","test","common","freeze","__proto__","unwrap","alphaNum$1","alphaNum","numeric$1","numeric","emailRegex","email$1","email","maxLength$1","maxLength","max","minLength$1","minLength","min","required$1","trim","sameAs$1","equalTo","sameAs","otherName","urlRegex","url$1","url","minValue$1","minValue","maxValue$1","maxValue"],"mappings":"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","file":"js/chunk-473736ad.849d28ea.js","sourcesContent":["<script>\nimport { SimpleBar } from \"simplebar-vue3\";\n\nimport Layout from \"../../layouts/main\";\nimport appConfig from \"@/app.config\";\nimport PageHeader from \"@/components/page-header\";\n\nimport { chatData, chatMessagesData } from \"./data\";\n\nimport { required, helpers } from \"@vuelidate/validators\";\nimport useVuelidate from \"@vuelidate/core\";\n\n/**\n * Chat Component\n */\nexport default {\n  setup() {\n    return { v$: useVuelidate() };\n  },\n  page: {\n    title: \"Chat\",\n    meta: [\n      {\n        name: \"description\",\n        content: appConfig.description,\n      },\n    ],\n  },\n  components: {\n    Layout,\n    PageHeader,\n    SimpleBar,\n  },\n  data() {\n    return {\n      chatData: chatData,\n      chatMessagesData: chatMessagesData,\n      title: \"Chat\",\n      items: [\n        {\n          text: \"Skote\",\n          href: \"/\",\n        },\n        {\n          text: \"Chat\",\n          active: true,\n        },\n      ],\n      submitted: false,\n      form: {\n        message: \"\",\n      },\n      username: \"Steven Franklin\",\n    };\n  },\n  validations: {\n    form: {\n      message: {\n        required: helpers.withMessage(\"Message is required\", required),\n      },\n    },\n  },\n  methods: {\n    /**\n     * Get the name of user\n     */\n    chatUsername(name) {\n      this.username = name;\n      this.usermessage = \"Hello\";\n      this.chatMessagesData = [];\n      const currentDate = new Date();\n\n      this.chatMessagesData.push({\n        name: this.username,\n        message: this.usermessage,\n        time: currentDate.getHours() + \":\" + currentDate.getMinutes(),\n      });\n    },\n\n    /**\n     * Char form Submit\n     */\n    // eslint-disable-next-line no-unused-vars\n    formSubmit(e) {\n      this.submitted = true;\n\n      // stop here if form is invalid\n      this.v$.$touch();\n\n      if (this.v$.$invalid) {\n        return;\n      } else {\n        const message = this.form.message;\n        const currentDate = new Date();\n        this.chatMessagesData.push({\n          align: \"right\",\n          name: \"Henry Wells\",\n          message,\n          time: currentDate.getHours() + \":\" + currentDate.getMinutes(),\n        });\n        this.handleScroll();\n      }\n      this.submitted = false;\n      this.form = {};\n    },\n\n    handleScroll() {\n      if (this.$refs.current.$el) {\n        setTimeout(() => {\n          this.$refs.current.SimpleBar.value.getScrollElement().scrollTop =\n            this.$refs.current.SimpleBar.value.getScrollElement().scrollHeight + 1500;\n        }, 500);\n      }\n    },\n  },\n  mounted() {\n    var container1 = document.querySelector(\n      \"#chat-list .simplebar-content-wrapper\"\n    );\n    container1.scrollTo({ top: 500, behavior: \"smooth\" });\n\n    var container2 = document.querySelector(\n      \"#containerElement .simplebar-content-wrapper\"\n    );\n    container2.scrollTo({ top: 500, behavior: \"smooth\" });\n  },\n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\" />\n    <div class=\"d-lg-flex\">\n      <div class=\"chat-leftsidebar me-lg-4\">\n        <div class>\n          <div class=\"py-4 border-bottom\">\n            <div class=\"d-flex\">\n              <div class=\"align-self-center me-3\">\n                <img\n                  src=\"@/assets/images/users/avatar-1.jpg\"\n                  class=\"avatar-xs rounded-circle\"\n                  alt\n                />\n              </div>\n              <div class=\"flex-grow-1\">\n                <h5 class=\"font-size-15 mt-0 mb-1\">Henry Wells</h5>\n                <p class=\"text-muted mb-0\">\n                  <i class=\"mdi mdi-circle text-success align-middle me-1\"></i>\n                  Active\n                </p>\n              </div>\n\n              <b-dropdown\n                menu-class=\"dropdown-menu-end\"\n                class=\"chat-noti-dropdown active\"\n                right\n                variant=\"white\"\n              >\n                <template v-slot:button-content>\n                  <i class=\"bx bx-bell bx-tada\"></i>\n                </template>\n                <b-dropdown-item>Action</b-dropdown-item>\n                <b-dropdown-item>Another action</b-dropdown-item>\n                <b-dropdown-item>Something else here</b-dropdown-item>\n              </b-dropdown>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"search-box chat-search-box py-4\">\n          <div class=\"position-relative\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search...\" />\n            <i class=\"bx bx-search-alt search-icon\"></i>\n          </div>\n        </div>\n\n        <div class=\"chat-leftsidebar-nav\">\n          <b-tabs pills fill content-class=\"py-4\">\n            <b-tab title=\"Tab 1\" active>\n              <template v-slot:title>\n                <i class=\"bx bx-chat font-size-20 d-sm-none\"></i>\n                <span class=\"d-none d-sm-block\">Chat</span>\n              </template>\n              <b-card-text>\n                <div>\n                  <h5 class=\"font-size-14 mb-3\">Recent</h5>\n                  <SimpleBar style=\"max-height: 410px\" id=\"chat-list\">\n                    <ul class=\"list-unstyled chat-list\">\n                      <li\n                        class\n                        v-for=\"data of chatData\"\n                        :key=\"data.id\"\n                        @click=\"chatUsername(data.name)\"\n                        :class=\"{ active: username == data.name }\"\n                      >\n                        <a href=\"javascript: void(0);\">\n                          <div class=\"d-flex\">\n                            <div class=\"align-self-center me-3\">\n                              <i\n                                :class=\"`mdi mdi-circle text-${data.color} font-size-10`\"\n                              ></i>\n                            </div>\n                            <div\n                              class=\"align-self-center me-3\"\n                              v-if=\"data.image\"\n                            >\n                              <img\n                                :src=\"`${data.image}`\"\n                                class=\"rounded-circle avatar-xs\"\n                                alt\n                              />\n                            </div>\n                            <div\n                              class=\"avatar-xs align-self-center me-3\"\n                              v-if=\"!data.image\"\n                            >\n                              <span\n                                class=\"\n                                  avatar-title\n                                  rounded-circle\n                                  bg-soft bg-primary\n                                  text-primary\n                                \"\n                                >{{ data.name.charAt(0) }}</span\n                              >\n                            </div>\n                            <div class=\"flex-grow-1 overflow-hidden\">\n                              <h5 class=\"text-truncate font-size-14 mb-1\">\n                                {{ data.name }}\n                              </h5>\n                              <p class=\"text-truncate mb-0\">\n                                {{ data.message }}\n                              </p>\n                            </div>\n                            <div class=\"font-size-11\">{{ data.time }}</div>\n                          </div>\n                        </a>\n                      </li>\n                    </ul>\n                  </SimpleBar>\n                </div>\n              </b-card-text>\n            </b-tab>\n            <b-tab>\n              <template v-slot:title>\n                <i class=\"bx bx-group font-size-20 d-sm-none\"></i>\n                <span class=\"d-none d-sm-block\">Groups</span>\n              </template>\n              <b-card-text>\n                <h5 class=\"font-size-14 mb-3\">Groups</h5>\n                <ul class=\"list-unstyled chat-list\">\n                  <li>\n                    <a href=\"#\">\n                      <div class=\"d-flex align-items-center\">\n                        <div class=\"avatar-xs me-3\">\n                          <span\n                            class=\"\n                              avatar-title\n                              rounded-circle\n                              bg-soft bg-primary\n                              text-primary\n                            \"\n                            >G</span\n                          >\n                        </div>\n\n                        <div class=\"flex-grow-1\">\n                          <h5 class=\"font-size-14 mb-0\">General</h5>\n                        </div>\n                      </div>\n                    </a>\n                  </li>\n\n                  <li>\n                    <a href=\"#\">\n                      <div class=\"d-flex align-items-center\">\n                        <div class=\"avatar-xs me-3\">\n                          <span\n                            class=\"\n                              avatar-title\n                              rounded-circle\n                              bg-soft bg-primary\n                              text-primary\n                            \"\n                            >R</span\n                          >\n                        </div>\n\n                        <div class=\"flex-grow-1\">\n                          <h5 class=\"font-size-14 mb-0\">Reporting</h5>\n                        </div>\n                      </div>\n                    </a>\n                  </li>\n\n                  <li>\n                    <a href=\"#\">\n                      <div class=\"d-flex align-items-center\">\n                        <div class=\"avatar-xs me-3\">\n                          <span\n                            class=\"\n                              avatar-title\n                              rounded-circle\n                              bg-soft bg-primary\n                              text-primary\n                            \"\n                            >M</span\n                          >\n                        </div>\n\n                        <div class=\"flex-grow-1\">\n                          <h5 class=\"font-size-14 mb-0\">Meeting</h5>\n                        </div>\n                      </div>\n                    </a>\n                  </li>\n\n                  <li>\n                    <a href=\"#\">\n                      <div class=\"d-flex align-items-center\">\n                        <div class=\"avatar-xs me-3\">\n                          <span\n                            class=\"\n                              avatar-title\n                              rounded-circle\n                              bg-soft bg-primary\n                              text-primary\n                            \"\n                            >A</span\n                          >\n                        </div>\n\n                        <div class=\"flex-grow-1\">\n                          <h5 class=\"font-size-14 mb-0\">Project A</h5>\n                        </div>\n                      </div>\n                    </a>\n                  </li>\n\n                  <li>\n                    <a href=\"#\">\n                      <div class=\"d-flex align-items-center\">\n                        <div class=\"avatar-xs me-3\">\n                          <span\n                            class=\"\n                              avatar-title\n                              rounded-circle\n                              bg-soft bg-primary\n                              text-primary\n                            \"\n                            >B</span\n                          >\n                        </div>\n\n                        <div class=\"flex-grow-1\">\n                          <h5 class=\"font-size-14 mb-0\">Project B</h5>\n                        </div>\n                      </div>\n                    </a>\n                  </li>\n                </ul>\n              </b-card-text>\n            </b-tab>\n            <b-tab>\n              <template v-slot:title>\n                <i class=\"bx bx-book-content font-size-20 d-sm-none\"></i>\n                <span class=\"d-none d-sm-block\">Contacts</span>\n              </template>\n              <b-card-text>\n                <h5 class=\"font-size-14 mb-3\">Contacts</h5>\n                <SimpleBar style=\"height: 410px\">\n                  <div>\n                    <div class=\"avatar-xs mb-3\">\n                      <span\n                        class=\"\n                          avatar-title\n                          rounded-circle\n                          bg-soft bg-primary\n                          text-primary\n                        \"\n                        >A</span\n                      >\n                    </div>\n\n                    <ul class=\"list-unstyled chat-list\">\n                      <li>\n                        <a href=\"#\">\n                          <h5 class=\"font-size-14 mb-0\">Adam Miller</h5>\n                        </a>\n                      </li>\n\n                      <li>\n                        <a href=\"#\">\n                          <h5 class=\"font-size-14 mb-0\">Alfonso Fisher</h5>\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div class=\"mt-4\">\n                    <div class=\"avatar-xs mb-3\">\n                      <span\n                        class=\"\n                          avatar-title\n                          rounded-circle\n                          bg-soft bg-primary\n                          text-primary\n                        \"\n                        >B</span\n                      >\n                    </div>\n\n                    <ul class=\"list-unstyled chat-list\">\n                      <li>\n                        <a href=\"#\">\n                          <h5 class=\"font-size-14 mb-0\">Bonnie Harney</h5>\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div class=\"mt-4\">\n                    <div class=\"avatar-xs mb-3\">\n                      <span\n                        class=\"\n                          avatar-title\n                          rounded-circle\n                          bg-soft bg-primary\n                          text-primary\n                        \"\n                        >C</span\n                      >\n                    </div>\n\n                    <ul class=\"list-unstyled chat-list\">\n                      <li>\n                        <a href=\"#\">\n                          <h5 class=\"font-size-14 mb-0\">Charles Brown</h5>\n                        </a>\n                        <a href=\"#\">\n                          <h5 class=\"font-size-14 mb-0\">Carmella Jones</h5>\n                        </a>\n                        <a href=\"#\">\n                          <h5 class=\"font-size-14 mb-0\">Carrie Williams</h5>\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n\n                  <div class=\"mt-4\">\n                    <div class=\"avatar-xs mb-3\">\n                      <span\n                        class=\"\n                          avatar-title\n                          rounded-circle\n                          bg-soft bg-primary\n                          text-primary\n                        \"\n                        >D</span\n                      >\n                    </div>\n\n                    <ul class=\"list-unstyled chat-list\">\n                      <li>\n                        <a href=\"#\">\n                          <h5 class=\"font-size-14 mb-0\">Dolores Minter</h5>\n                        </a>\n                      </li>\n                    </ul>\n                  </div>\n                </SimpleBar>\n              </b-card-text>\n            </b-tab>\n          </b-tabs>\n        </div>\n      </div>\n      <div class=\"w-100 user-chat\">\n        <div class=\"card\">\n          <div class=\"p-4 border-bottom\">\n            <div class=\"row\">\n              <div class=\"col-md-4 col-9\">\n                <h5 class=\"font-size-15 mb-1\">{{ username }}</h5>\n                <p class=\"text-muted mb-0\">\n                  <i class=\"mdi mdi-circle text-success align-middle me-1\"></i>\n                  Active now\n                </p>\n              </div>\n              <div class=\"col-md-8 col-3\">\n                <ul class=\"list-inline user-chat-nav text-end mb-0\">\n                  <li class=\"list-inline-item d-none d-sm-inline-block\">\n                    <b-dropdown\n                      menu-class=\"dropdown-menu-md dropdown-menu-end\"\n                      variant=\"white\"\n                      right\n                      toggle-class=\"nav-btn\"\n                    >\n                      <template v-slot:button-content>\n                        <i class=\"bx bx-search-alt-2\"></i>\n                      </template>\n                      <form class=\"p-3\">\n                        <div class=\"form-group m-0\">\n                          <div class=\"input-group\">\n                            <input\n                              type=\"text\"\n                              class=\"form-control\"\n                              placeholder=\"Search ...\"\n                              aria-label=\"Recipient's username\"\n                            />\n                            <div class=\"input-group-append\">\n                              <button class=\"btn btn-primary\" type=\"submit\">\n                                <i class=\"mdi mdi-magnify\"></i>\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </form>\n                    </b-dropdown>\n                  </li>\n                  <li class=\"list-inline-item d-none d-sm-inline-block\">\n                    <b-dropdown\n                      toggle-class=\"nav-btn\"\n                      menu-class=\"dropdown-menu-end\"\n                      right\n                      variant=\"white\"\n                    >\n                      <template v-slot:button-content>\n                        <i class=\"bx bx-cog\"></i>\n                      </template>\n                      <b-dropdown-item>View Profile</b-dropdown-item>\n                      <b-dropdown-item>Clear chat</b-dropdown-item>\n                      <b-dropdown-item>Muted</b-dropdown-item>\n                      <b-dropdown-item>Delete</b-dropdown-item>\n                    </b-dropdown>\n                  </li>\n\n                  <li class=\"list-inline-item\">\n                    <b-dropdown\n                      toggle-class=\"nav-btn\"\n                      menu-class=\"dropdown-menu-end\"\n                      right\n                      variant=\"white\"\n                    >\n                      <template v-slot:button-content>\n                        <i class=\"bx bx-dots-horizontal-rounded\"></i>\n                      </template>\n                      <b-dropdown-item>Action</b-dropdown-item>\n                      <b-dropdown-item>Another action</b-dropdown-item>\n                      <b-dropdown-item>Something else</b-dropdown-item>\n                    </b-dropdown>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"chat-users\">\n            <div class=\"chat-conversation p-3\">\n              <SimpleBar\n                style=\"max-height: 470px\"\n                id=\"containerElement\"\n                ref=\"current\"\n              >\n                <ul class=\"list-unstyled\">\n                  <li>\n                    <div class=\"chat-day-title\">\n                      <span class=\"title\">Today</span>\n                    </div>\n                  </li>\n                  <li\n                    v-for=\"data of chatMessagesData\"\n                    :key=\"data.message\"\n                    :class=\"{ right: `${data.align}` === 'right' }\"\n                  >\n                    <div class=\"conversation-list\">\n                      <b-dropdown\n                        variant=\"white\"\n                        menu-class=\"dropdown-menu-end\"\n                      >\n                        <template v-slot:button-content>\n                          <i class=\"bx bx-dots-vertical-rounded\"></i>\n                        </template>\n                        <b-dropdown-item>Copy</b-dropdown-item>\n                        <b-dropdown-item>Save</b-dropdown-item>\n                        <b-dropdown-item>Forward</b-dropdown-item>\n                        <b-dropdown-item>Delete</b-dropdown-item>\n                      </b-dropdown>\n                      <div class=\"ctext-wrap\">\n                        <div class=\"conversation-name\">{{ data.name }}</div>\n                        <p>{{ data.message }}</p>\n                        <p class=\"chat-time mb-0\">\n                          <i class=\"bx bx-time-five align-middle me-1\"></i>\n                          {{ data.time }}\n                        </p>\n                      </div>\n                    </div>\n                  </li>\n                </ul>\n              </SimpleBar>\n            </div>\n            <div class=\"p-3 chat-input-section\">\n              <form @submit.prevent=\"formSubmit\" class=\"row\">\n                <div class=\"col\">\n                  <div class=\"position-relative\">\n                    <input\n                      type=\"text\"\n                      v-model=\"form.message\"\n                      class=\"form-control chat-input rounded\"\n                      placeholder=\"Enter Message...\"\n                      :class=\"{\n                        'is-invalid': submitted && v$.form.message.$error,\n                      }\"\n                    />\n                    <div\n                      v-if=\"submitted && v$.form.message.$error\"\n                      class=\"invalid-feedback\"\n                    >\n                      <span v-if=\"v$.form.message.required.$message\">{{\n                        v$.form.message.required.$message\n                      }}</span>\n                    </div>\n                    <div class=\"chat-input-links\">\n                      <ul class=\"list-inline mb-0\">\n                        <li class=\"list-inline-item\">\n                          <a\n                            href=\"javascript: void(0);\"\n                            v-b-tooltip.hover\n                            placement=\"top\"\n                            title=\"Emoji\"\n                          >\n                            <i class=\"mdi mdi-emoticon-happy-outline\"></i>\n                          </a>\n                        </li>\n                        <li class=\"list-inline-item\">\n                          <a\n                            href=\"javascript: void(0);\"\n                            v-b-tooltip.hover\n                            placement=\"top\"\n                            title=\"Images\"\n                          >\n                            <i class=\"mdi mdi-file-image-outline\"></i>\n                          </a>\n                        </li>\n                        <li class=\"list-inline-item\">\n                          <a\n                            href=\"javascript: void(0);\"\n                            v-b-tooltip.hover\n                            placement=\"top\"\n                            title=\"Add Files\"\n                          >\n                            <i class=\"mdi mdi-file-document-outline\"></i>\n                          </a>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-auto\">\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary btn-rounded chat-send w-md\"\n                  >\n                    <span class=\"d-none d-sm-inline-block me-2\">Send</span>\n                    <i class=\"mdi mdi-send\"></i>\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- end row -->\n  </Layout>\n</template>\n","const chatData = [\n    {\n        id: 1,\n        image: require('@/assets/images/users/avatar-2.jpg'),\n        name: 'Steven Franklin',\n        message: 'Hey! there I\\'m available',\n        time: '05 min',\n        color: 'secondary'  \n    },\n    {\n        id: 2,\n        image: require('@/assets/images/users/avatar-3.jpg'),\n        name: 'Adam Miller',\n        message: 'I\\'ve finished it! See you so',\n        time: '12 min',\n        color: 'success'\n    },\n    {\n        id: 3,\n        name: 'Keith Gonzales',\n        message: 'This theme is awesome!',\n        time: '24 min',\n        color: 'success'\n    },\n    {\n        id: 4,\n        image: require('@/assets/images/users/avatar-4.jpg'),\n        name: 'Jose Vickery',\n        message: 'Nice to meet you',\n        time: '1 hr',\n        color: 'warning'\n    },\n    {\n        id: 5,\n        name: 'Mitchel Givens',\n        message: 'Hey! there I\\'m available',\n        time: '3 hrs',\n        color: 'secondary'\n    },\n    {\n        id: 6,\n        image: require('@/assets/images/users/avatar-4.jpg'),\n        name: 'Stephen Hadley',\n        message: 'I\\'ve finished it! See you so',\n        time: '5 hrs',\n        color: 'success'\n    },\n    {\n        id: 7,\n        image: require('@/assets/images/users/avatar-2.jpg'),\n        name: 'Leord Joseph',\n        message: 'This theme is awesome!',\n        time: '24 min',\n        color: 'success'\n    },\n];\n\nconst chatMessagesData = [\n    {\n        name: 'Steven Franklin',\n        message: 'Hello!',\n        time: '10:00'\n    },\n    {\n        align: 'right',\n        name: 'Henry Wells',\n        message: 'Hi, How are you? What about our next meeting?',\n        time: '10:02'\n    },\n    {\n        name: 'Steven Franklin',\n        message: 'Yeah everything is fine',\n        time: '10:06'\n    },\n    {\n        name: 'Steven Franklin',\n        message: '& Next meeting tomorrow 10.00AM',\n        time: '10:06'\n    },\n    {\n        align: 'right',\n        name: 'Henry Wells',\n        message: 'Wow that\\'s great',\n        time: '10:07'\n    }\n];\n\nexport { chatData, chatMessagesData };","import { render } from \"./index.vue?vue&type=template&id=0d047169\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/mistert/Escritorio/www/cvisual_code/Admin_Frontend/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","module.exports = __webpack_public_path__ + \"img/avatar-2.02aea0c2.jpg\";","import { unref } from 'vue-demi';\n\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\nfunction isObject(o) {\n  return o !== null && typeof o === 'object' && !Array.isArray(o);\n}\n/**\n * Returns a standard ValidatorObject\n * Wraps a plain function into a ValidatorObject\n * @param {NormalizedValidator|Function} validator\n * @return {NormalizedValidator}\n */\n\nfunction normalizeValidatorObject(validator) {\n  return isFunction(validator.$validator) ? Object.assign({}, validator) : {\n    $validator: validator\n  };\n}\nfunction isPromise(object) {\n  return isObject(object) && isFunction(object.then);\n}\n/**\n * Unwraps a ValidatorResponse object, into a boolean.\n * @param {ValidatorResponse} result\n * @return {boolean}\n */\n\nfunction unwrapValidatorResponse(result) {\n  if (typeof result === 'object') return result.$valid;\n  return result;\n}\n/**\n * Unwraps a `NormalizedValidator` object, returning its validator function.\n * @param {NormalizedValidator | Function} validator\n * @return {function}\n */\n\nfunction unwrapNormalizedValidator(validator) {\n  return validator.$validator || validator;\n}\n\n/**\n * Allows attaching parameters to a validator\n * @param {Object} $params\n * @param {NormalizedValidator|Function} $validator\n * @return {NormalizedValidator}\n */\n\nfunction withParams($params, $validator) {\n  if (!isObject($params)) throw new Error(`[@vuelidate/validators]: First parameter to \"withParams\" should be an object, provided ${typeof $params}`);\n  if (!isObject($validator) && !isFunction($validator)) throw new Error(`[@vuelidate/validators]: Validator must be a function or object with $validator parameter`);\n  const validatorObj = normalizeValidatorObject($validator);\n  validatorObj.$params = Object.assign({}, validatorObj.$params || {}, $params);\n  return validatorObj;\n}\n\n/**\n * @callback MessageCallback\n * @param {Object} params\n * @return String\n */\n\n/**\n * Attaches a message to a validator\n * @param {MessageCallback | String} $message\n * @param {NormalizedValidator|Function} $validator\n * @return {NormalizedValidator}\n */\n\nfunction withMessage($message, $validator) {\n  if (!isFunction($message) && typeof unref($message) !== 'string') throw new Error(`[@vuelidate/validators]: First parameter to \"withMessage\" should be string or a function returning a string, provided ${typeof $message}`);\n  if (!isObject($validator) && !isFunction($validator)) throw new Error(`[@vuelidate/validators]: Validator must be a function or object with $validator parameter`);\n  const validatorObj = normalizeValidatorObject($validator);\n  validatorObj.$message = $message;\n  return validatorObj;\n}\n\n/**\n * @typedef {function(*): Promise<boolean|ValidatorResponse>} asyncValidator\n */\n\n/**\n * @typedef {Ref<*>[]|function(*): *} watchTargets\n */\n\n/**\n * Wraps validators that returns a Promise.\n * @param {asyncValidator} $validator\n * @param {watchTargets} $watchTargets\n * @return {{$async: boolean, $validator: asyncValidator, $watchTargets: watchTargets}}\n */\n\nfunction withAsync($validator, $watchTargets = []) {\n  const validatorObj = normalizeValidatorObject($validator);\n  return Object.assign({}, validatorObj, {\n    $async: true,\n    $watchTargets\n  });\n}\n\nfunction forEach(validators) {\n  return {\n    $validator(collection, ...others) {\n      // go over the collection. It can be a ref as well.\n      return unref(collection).reduce((previous, collectionItem) => {\n        // go over each property\n        const collectionEntryResult = Object.entries(collectionItem).reduce((all, [property, $model]) => {\n          // get the validators for this property\n          const innerValidators = validators[property] || {}; // go over each validator and run it\n\n          const propertyResult = Object.entries(innerValidators).reduce((all, [validatorName, currentValidator]) => {\n            // extract the validator. Supports simple and extended validators.\n            const validatorFunction = unwrapNormalizedValidator(currentValidator); // Call the validator, passing the VM as this, the value, current iterated object and the rest.\n\n            const $response = validatorFunction.call(this, $model, collectionItem, ...others); // extract the valid from the result\n\n            const $valid = unwrapValidatorResponse($response); // store the entire response for later\n\n            all.$data[validatorName] = $response;\n            all.$data.$invalid = !$valid || !!all.$data.$invalid;\n            all.$data.$error = all.$data.$invalid; // if not valid, get the $message\n\n            if (!$valid) {\n              let $message = currentValidator.$message || '';\n              const $params = currentValidator.$params || {}; // If $message is a function, we call it with the appropriate parameters\n\n              if (typeof $message === 'function') {\n                $message = $message({\n                  $pending: false,\n                  $invalid: !$valid,\n                  $params,\n                  $model,\n                  $response\n                });\n              } // save the error object\n\n\n              all.$errors.push({\n                $property: property,\n                $message,\n                $params,\n                $response,\n                $model,\n                $pending: false,\n                $validator: validatorName\n              });\n            }\n\n            return {\n              $valid: all.$valid && $valid,\n              $data: all.$data,\n              $errors: all.$errors\n            };\n          }, {\n            $valid: true,\n            $data: {},\n            $errors: []\n          });\n          all.$data[property] = propertyResult.$data;\n          all.$errors[property] = propertyResult.$errors;\n          return {\n            $valid: all.$valid && propertyResult.$valid,\n            $data: all.$data,\n            $errors: all.$errors\n          };\n        }, {\n          $valid: true,\n          $data: {},\n          $errors: {}\n        });\n        return {\n          $valid: previous.$valid && collectionEntryResult.$valid,\n          $data: previous.$data.concat(collectionEntryResult.$data),\n          $errors: previous.$errors.concat(collectionEntryResult.$errors)\n        };\n      }, {\n        $valid: true,\n        $data: [],\n        $errors: []\n      });\n    },\n\n    // collect all the validation errors into a 2 dimensional array, for each entry in the collection, you have an array of error messages.\n    $message: ({\n      $response\n    }) => $response ? $response.$errors.map(context => {\n      return Object.values(context).map(errors => errors.map(error => error.$message)).reduce((a, b) => a.concat(b), []);\n    }) : []\n  };\n}\n\n// \"required\" core, used in almost every validator to allow empty values\nconst req = value => {\n  value = unref(value);\n  if (Array.isArray(value)) return !!value.length;\n\n  if (value === undefined || value === null) {\n    return false;\n  }\n\n  if (value === false) {\n    return true;\n  }\n\n  if (value instanceof Date) {\n    // invalid date won't pass\n    return !isNaN(value.getTime());\n  }\n\n  if (typeof value === 'object') {\n    for (let _ in value) return true;\n\n    return false;\n  }\n\n  return !!String(value).length;\n};\n/**\n * Returns the length of an arbitrary value\n * @param {Array|Object|String} value\n * @return {number}\n */\n\nconst len = value => {\n  value = unref(value);\n  if (Array.isArray(value)) return value.length;\n\n  if (typeof value === 'object') {\n    return Object.keys(value).length;\n  }\n\n  return String(value).length;\n};\n/**\n * Regex based validator template\n * @param {RegExp} expr\n * @return {function(*=): boolean}\n */\n\nfunction regex(expr) {\n  return value => {\n    value = unref(value);\n    return !req(value) || expr.test(value);\n  };\n}\n\nvar common = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  withParams: withParams,\n  withMessage: withMessage,\n  withAsync: withAsync,\n  forEach: forEach,\n  req: req,\n  len: len,\n  regex: regex,\n  unwrap: unref,\n  unwrapNormalizedValidator: unwrapNormalizedValidator,\n  unwrapValidatorResponse: unwrapValidatorResponse,\n  normalizeValidatorObject: normalizeValidatorObject\n});\n\nvar alpha$1 = regex(/^[a-zA-Z]*$/);\n\n/**\n * Validate if value is alphabetical string.\n * @type {NormalizedValidator}\n */\n\nvar alpha = {\n  $validator: alpha$1,\n  $message: 'The value is not alphabetical',\n  $params: {\n    type: 'alpha'\n  }\n};\n\nvar alphaNum$1 = regex(/^[a-zA-Z0-9]*$/);\n\n/**\n * Validate if value is alpha-numeric string.\n * @type {NormalizedValidator}\n */\n\nvar alphaNum = {\n  $validator: alphaNum$1,\n  $message: 'The value must be alpha-numeric',\n  $params: {\n    type: 'alphaNum'\n  }\n};\n\nvar numeric$1 = regex(/^\\d*(\\.\\d+)?$/);\n\n/**\n * Check whether a value is numeric.\n * @type NormalizedValidator\n */\n\nvar numeric = {\n  $validator: numeric$1,\n  $message: 'Value must be numeric',\n  $params: {\n    type: 'numeric'\n  }\n};\n\n/**\n * Check if a numeric value is between two values.\n * @param {Ref<Number> | Number} min\n * @param {Ref<Number> | Number} max\n * @return {function(*=): boolean}\n */\n\nfunction between$1 (min, max) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +unref(min) <= +value && +unref(max) >= +value;\n}\n\n/**\n * Checks if a value is between two values.\n * @param {Ref<Number> | Number} min\n * @param {Ref<Number> | Number} max\n * @return {NormalizedValidator}\n */\n\nfunction between (min, max) {\n  return {\n    $validator: between$1(min, max),\n    $message: ({\n      $params\n    }) => `The value must be between ${$params.min} and ${$params.max}`,\n    $params: {\n      min,\n      max,\n      type: 'between'\n    }\n  };\n}\n\nconst emailRegex = /^(?:[A-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9]{2,}(?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nvar email$1 = regex(emailRegex);\n\n/**\n * Validate if value is an email.\n * @type {NormalizedValidator}\n */\n\nvar email = {\n  $validator: email$1,\n  $message: 'Value is not a valid email address',\n  $params: {\n    type: 'email'\n  }\n};\n\n/**\n * Check if a string is an IP Address\n * @param {String} value\n * @returns {boolean}\n */\n\nfunction ipAddress$1 (value) {\n  if (!req(value)) {\n    return true;\n  }\n\n  if (typeof value !== 'string') {\n    return false;\n  }\n\n  const nibbles = value.split('.');\n  return nibbles.length === 4 && nibbles.every(nibbleValid);\n}\n\nconst nibbleValid = nibble => {\n  if (nibble.length > 3 || nibble.length === 0) {\n    return false;\n  }\n\n  if (nibble[0] === '0' && nibble !== '0') {\n    return false;\n  }\n\n  if (!nibble.match(/^\\d+$/)) {\n    return false;\n  }\n\n  const numeric = +nibble | 0;\n  return numeric >= 0 && numeric <= 255;\n};\n\n/**\n * Validate if value is an ipAddress string.\n * @type {NormalizedValidator}\n */\n\nvar ipAddress = {\n  $validator: ipAddress$1,\n  $message: 'The value is not a valid IP address',\n  $params: {\n    type: 'ipAddress'\n  }\n};\n\n/**\n * Check if value is a properly formatted Mac Address.\n * @param {String | Ref<String>} [separator]\n * @returns {function(*): boolean}\n */\n\nfunction macAddress$1 (separator = ':') {\n  return value => {\n    separator = unref(separator);\n\n    if (!req(value)) {\n      return true;\n    }\n\n    if (typeof value !== 'string') {\n      return false;\n    }\n\n    const parts = typeof separator === 'string' && separator !== '' ? value.split(separator) : value.length === 12 || value.length === 16 ? value.match(/.{2}/g) : null;\n    return parts !== null && (parts.length === 6 || parts.length === 8) && parts.every(hexValid);\n  };\n}\n\nconst hexValid = hex => hex.toLowerCase().match(/^[0-9a-f]{2}$/);\n\n/**\n * Validate if value is a valid Mac Address string.\n * @returns {NormalizedValidator}\n */\n\nfunction macAddress (separator) {\n  return {\n    $validator: macAddress$1(separator),\n    $message: 'The value is not a valid MAC Address',\n    $params: {\n      type: 'macAddress'\n    }\n  };\n}\n\n/**\n * Check if provided value has a maximum length\n * @param {Number | Ref<Number>} length\n * @returns {function(Array|Object|String): boolean}\n */\n\nfunction maxLength$1 (length) {\n  return value => !req(value) || len(value) <= unref(length);\n}\n\n/**\n * Validate the max length of a string.\n * @param {Number} max\n * @return {NormalizedValidator}\n */\n\nfunction maxLength (max) {\n  return {\n    $validator: maxLength$1(max),\n    $message: ({\n      $params\n    }) => `The maximum length allowed is ${$params.max}`,\n    $params: {\n      max,\n      type: 'maxLength'\n    }\n  };\n}\n\n/**\n * Check if value is above a threshold.\n * @param {Number | Ref<Number>} length\n * @returns {function(Array|Object|String): boolean}\n */\n\nfunction minLength$1 (length) {\n  return value => !req(value) || len(value) >= unref(length);\n}\n\n/**\n * Check if value is above a threshold.\n * @param {Number | Ref<Number>} min\n * @returns {NormalizedValidator}\n */\n\nfunction minLength (min) {\n  return {\n    $validator: minLength$1(min),\n    $message: ({\n      $params\n    }) => `This field should be at least ${$params.min} long`,\n    $params: {\n      min,\n      type: 'minLength'\n    }\n  };\n}\n\n/**\n * Validates if a value is empty.\n * @param {String | Array | Date | Object} value\n * @returns {boolean}\n */\n\nfunction required$1 (value) {\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n\n  return req(value);\n}\n\n/**\n * Check if a value is empty or not.\n * @type {NormalizedValidator}\n */\n\nvar required = {\n  $validator: required$1,\n  $message: 'Value is required',\n  $params: {\n    type: 'required'\n  }\n};\n\nconst validate$1 = (prop, val) => prop ? req(val) : true;\n/**\n * Returns required if the passed property is truthy\n * @param {Boolean | String | function(any): Boolean | Ref<string | boolean>} propOrFunction\n * @return {function(value: *, parentVM: object): Boolean}\n */\n\n\nfunction requiredIf$1(propOrFunction) {\n  return function (value, parentVM) {\n    if (typeof propOrFunction !== 'function') {\n      return validate$1(unref(propOrFunction), value);\n    }\n\n    const result = propOrFunction.call(this, value, parentVM);\n    return validate$1(result, value);\n  };\n}\n\n/**\n * Returns required if the passed property is truthy\n * @param {Boolean | String | function(): (Boolean | Promise<boolean>)} prop\n * @return {NormalizedValidator}\n */\n\nfunction requiredIf (prop) {\n  return {\n    $validator: requiredIf$1(prop),\n    $message: 'The value is required',\n    $params: {\n      type: 'requiredIf',\n      prop\n    }\n  };\n}\n\nconst validate = (prop, val) => !prop ? req(val) : true;\n/**\n * Returns required if the passed property is falsy.\n * @param {Boolean | String | function(any): Boolean | Ref<string | boolean>} propOrFunction\n * @return {function(value: *, parentVM: object): Boolean}\n */\n\n\nfunction requiredUnless$1(propOrFunction) {\n  return function (value, parentVM) {\n    if (typeof propOrFunction !== 'function') {\n      return validate(unref(propOrFunction), value);\n    }\n\n    const result = propOrFunction.call(this, value, parentVM);\n    return validate(result, value);\n  };\n}\n\n/**\n * Returns required unless the passed property is truthy\n * @param {Boolean | String | function(): (Boolean | Promise<boolean>)} prop\n * @return {NormalizedValidator}\n */\n\nfunction requiredUnless (prop) {\n  return {\n    $validator: requiredUnless$1(prop),\n    $message: 'The value is required',\n    $params: {\n      type: 'requiredUnless',\n      prop\n    }\n  };\n}\n\n/**\n * Check if two values are identical.\n * @param {*} equalTo\n * @return {function(*=): boolean}\n */\n\nfunction sameAs$1 (equalTo) {\n  return value => unref(value) === unref(equalTo);\n}\n\n/**\n * Check if two values are identical\n * @param {*} equalTo\n * @param {String} [otherName]\n * @return {NormalizedValidator}\n */\n\nfunction sameAs (equalTo, otherName = 'other') {\n  return {\n    $validator: sameAs$1(equalTo),\n    $message: ({\n      $params\n    }) => `The value must be equal to the ${otherName} value`,\n    $params: {\n      equalTo,\n      otherName,\n      type: 'sameAs'\n    }\n  };\n}\n\n/**\n * Regex taken from {@link https://gist.github.com/dperini/729294}\n */\n\nconst urlRegex = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)+(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\nvar url$1 = regex(urlRegex);\n\n/**\n * Check if a value is a url\n * @type {NormalizedValidator}\n */\n\nvar url = {\n  $validator: url$1,\n  $message: 'The value is not a valid URL address',\n  $params: {\n    type: 'url'\n  }\n};\n\nfunction _await$1(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n\nfunction syncOr(validators) {\n  return function (...args) {\n    return validators.reduce((valid, fn) => {\n      if (unwrapValidatorResponse(valid)) return valid;\n      return unwrapNormalizedValidator(fn).apply(this, args);\n    }, false);\n  };\n}\n\nfunction asyncOr(validators) {\n  return function (...args) {\n    const _this = this;\n\n    return validators.reduce(function (valid, fn) {\n      return _await$1(valid, function (r) {\n        return unwrapValidatorResponse(r) ? r : unwrapNormalizedValidator(fn).apply(_this, args);\n      });\n    }, Promise.resolve(false));\n  };\n}\n/**\n * Returns true when one of the provided functions returns true.\n * @param {...(NormalizedValidator|Function)} validators\n * @return {{$validator: function(...[*]=): (boolean | Promise<boolean>), $async: boolean, $watchTargets: any[]}}\n */\n\n\nfunction or$1(...validators) {\n  const $async = validators.some(v => v.$async);\n  const $watchTargets = validators.reduce((all, v) => {\n    if (!v.$watchTargets) return all;\n    return all.concat(v.$watchTargets);\n  }, []);\n\n  let $validator = () => false;\n\n  if (validators.length) $validator = $async ? asyncOr(validators) : syncOr(validators);\n  return {\n    $async,\n    $validator,\n    $watchTargets\n  };\n}\n\n/**\n * Returns true when one of the provided functions returns true.\n * @param {...(NormalizedValidator|Function)} validators\n * @return {NormalizedValidator}\n */\n\nfunction or (...validators) {\n  return withParams({\n    type: 'or'\n  }, withMessage('The value does not match any of the provided validators', or$1(...validators)));\n}\n\nfunction _await(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n/**\n *\n * @param validators\n * @return {function(...[*]=): Promise<boolean>}\n */\n\n\nfunction syncAnd(validators) {\n  return function (...args) {\n    return validators.reduce((valid, fn) => {\n      if (!unwrapValidatorResponse(valid)) return valid;\n      return unwrapNormalizedValidator(fn).apply(this, args);\n    }, true);\n  };\n}\n\nfunction asyncAnd(validators) {\n  return function (...args) {\n    const _this = this;\n\n    return validators.reduce(function (valid, fn) {\n      return _await(valid, function (r) {\n        return unwrapValidatorResponse(r) ? unwrapNormalizedValidator(fn).apply(_this, args) : r;\n      });\n    }, Promise.resolve(true));\n  };\n}\n/**\n * Returns true when all validators are truthy\n * @param {...(NormalizedValidator | Function)} validators\n * @return {{$validator: function(...[*]=): (boolean | Promise<boolean>), $async: boolean, $watchTargets: any[]}}\n */\n\n\nfunction and$1(...validators) {\n  const $async = validators.some(v => v.$async);\n  const $watchTargets = validators.reduce((all, v) => {\n    if (!v.$watchTargets) return all;\n    return all.concat(v.$watchTargets);\n  }, []);\n\n  let $validator = () => false;\n\n  if (validators.length) $validator = $async ? asyncAnd(validators) : syncAnd(validators);\n  return {\n    $async,\n    $validator,\n    $watchTargets\n  };\n}\n\n/**\n * Validate if all validators match.\n * @param {...*} validators\n * @returns {NormalizedValidator}\n */\n\nfunction and (...validators) {\n  return withParams({\n    type: 'and'\n  }, withMessage('The value does not match all of the provided validators', and$1(...validators)));\n}\n\n/**\n * Swaps the result of a value\n * @param {NormalizedValidator|Function} validator\n * @returns {function(*=, *=): boolean}\n */\n\nfunction not$1 (validator) {\n  return function (value, vm) {\n    if (!req(value)) return true;\n    const response = unwrapNormalizedValidator(validator).call(this, value, vm);\n    if (!isPromise(response)) return !unwrapValidatorResponse(response);\n    return response.then(r => !unwrapValidatorResponse(r));\n  };\n}\n\n/**\n * Swaps the result of a value\n * @param {NormalizedValidator|Function} validator\n * @returns {NormalizedValidator}\n */\n\nfunction not (validator) {\n  return {\n    $validator: not$1(validator),\n    $message: `The value does not match the provided validator`,\n    $params: {\n      type: 'not'\n    }\n  };\n}\n\n/**\n * Check if a value is above a threshold.\n * @param {String | Number | Ref<Number> | Ref<String>} min\n * @returns {function(*=): boolean}\n */\n\nfunction minValue$1 (min) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +value >= +unref(min);\n}\n\n/**\n * Check if a value is above a threshold.\n * @param {String | Number | Ref<Number> | Ref<String>} min\n * @returns {NormalizedValidator}\n */\n\nfunction minValue (min) {\n  return {\n    $validator: minValue$1(min),\n    $message: ({\n      $params\n    }) => `The minimum value allowed is ${$params.min}`,\n    $params: {\n      min,\n      type: 'minValue'\n    }\n  };\n}\n\n/**\n * Check if value is below a threshold.\n * @param {Number | Ref<Number> | Ref<String>} max\n * @returns {function(*=): boolean}\n */\n\nfunction maxValue$1 (max) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +value <= +unref(max);\n}\n\n/**\n * Check if value is below a threshold.\n * @param {Number | Ref<Number> | Ref<String>} max\n * @return {NormalizedValidator}\n */\n\nvar maxValue = (max => ({\n  $validator: maxValue$1(max),\n  $message: ({\n    $params\n  }) => `The maximum value is ${$params.max}`,\n  $params: {\n    max,\n    type: 'maxValue'\n  }\n}));\n\n// ^-[0-9]+$ - only for negative integer (minus sign without at least 1 digit is not a number)\n\nvar integer$1 = regex(/(^[0-9]*$)|(^-[0-9]+$)/);\n\n/**\n * Validate if value is integer.\n * @type {NormalizedValidator}\n */\n\nvar integer = {\n  $validator: integer$1,\n  $message: 'Value is not an integer',\n  $params: {\n    type: 'integer'\n  }\n};\n\nvar decimal$1 = regex(/^[-]?\\d*(\\.\\d+)?$/);\n\n/**\n * Validate if value is decimal number.\n * @type {NormalizedValidator}\n */\n\nvar decimal = {\n  $validator: decimal$1,\n  $message: 'Value must be decimal',\n  $params: {\n    type: 'decimal'\n  }\n};\n\n/**\n * Creates a translatable version of `withMessage` helper.\n * @param {function} t - the translation function of your choice\n * @param {function} [messagePath] - a function to generate the message path, passed to `t` for each message. By default it is `validations.${$validator}`\n * @param {function} [messageParams] - a function to augment the params, passed to `t` for each message.\n */\n\nfunction createI18nMessage({\n  t,\n  messagePath = ({\n    $validator\n  }) => `validations.${$validator}`,\n  messageParams = params => params\n}) {\n  return function withI18nMessage(validator, {\n    withArguments = false,\n    messagePath: localMessagePath = messagePath,\n    messageParams: localMessageParams = messageParams\n  } = {}) {\n    function message(props) {\n      return t(localMessagePath(props), localMessageParams(Object.assign({\n        model: props.$model,\n        property: props.$property,\n        pending: props.$pending,\n        invalid: props.$invalid,\n        response: props.$response,\n        validator: props.$validator,\n        propertyPath: props.$propertyPath\n      }, props.$params)));\n    }\n\n    if (withArguments && typeof validator === 'function') {\n      return (...args) => withMessage(message, validator(...args));\n    }\n\n    return withMessage(message, validator);\n  };\n}\n\nexport { alpha, alphaNum, and, between, createI18nMessage, decimal, email, common as helpers, integer, ipAddress, macAddress, maxLength, maxValue, minLength, minValue, not, numeric, or, required, requiredIf, requiredUnless, sameAs, url };\n"],"sourceRoot":""}